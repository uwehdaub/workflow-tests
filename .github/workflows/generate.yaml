name: test-workflow-dispatch
on:
  repository_dispatch:
    types: ["generate"]
  workflow_dispatch:
    inputs:
      generator-organization:
        description: 'Generator organization'
        required: true
        default: 'metronom-gmbh'
      generator-repository:
        description: 'Generator repository'
        required: true
        default: 'lpx-workflow-generator'
      generator-version:
        description: 'Generator tag/branch'
        required: true
        default: 'master'
      target-organization:
        description: 'Target organization'
        required: true
        default: 'developer-experience'
      target-repository:
        description: 'Target repository'
        required: true
jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
    - name: processing input values
      run: | 
        echo "processing input values"
        if [[ "${{github.event.inputs.generator-repository}}" != "" ]]; then
          echo "This workflow is triggered manually via event 'workflow_dispatch'"
          echo "::set-env name=generator-organization::${{ github.event.inputs.generator-organization }}"
          echo "::set-env name=generator-repository::${{ github.event.inputs.generator-repository }}"
          echo "::set-env name=generator-version::${{ github.event.inputs.generator-version }}"
          echo "::set-env name=target-organization::${{ github.event.inputs.target-organization }}"
          echo "::set-env name=target-repository::${{ github.event.inputs.target-repository }}"
        else
          echo "This workflow is triggered via event 'repo_dispatch'"
          if [[ "${{ github.event.client_payload.generator.organization }}" != "" ]]; then
            echo "::set-env name=generator-organization::${{ github.event.client_payload.generator.organization }}"
          else
            echo "::error::the field generator.organization is missing from the json payload"
            exit 1
          fi
          if [[ "${{ github.event.client_payload.generator.repository }}" != "" ]]; then
            echo "::set-env name=generator-repository::${{ github.event.client_payload.generator.repository }}"
          else
            echo "::error::the field generator.repository is missing from the json payload"
            exit 1
          fi
          if [[ "${{ github.event.client_payload.generator.version }}" != "" ]]; then
            echo "::set-env name=generator-version::${{ github.event.client_payload.generator.version }}"
          else
            echo "::warning::the field generator.repository is missing from the json payload (using master)"
            echo "::set-env name=generator-version::master"
          fi
          if [[ "${{ github.event.client_payload.organization }}" != "" ]]; then
            echo "::set-env name=target-organization::${{ github.event.client_payload.organization }}"
          else
            echo "::error::the field organization is missing from the json payload"
            exit 1
          fi
          if [[ "${{ github.event.client_payload.repository }}" != "" ]]; then
            echo "::set-env name=target-repository::${{ github.event.client_payload.repository }}"
          else
            echo "::error::the field repository is missing from the json payload"
            exit 1
          fi
        fi
    - name: using variables
      run: |
        echo "merge-bot is called with the following input values"
        echo "generator to be used"
        echo "  generator.organization: ${{ env.generator-organization }}"
        echo "  generator.repository:   ${{ env.generator-repository }}"
        echo "  generator.version:      ${{ env.generator-version }}"
        echo "target repository to which the pull request should be applied"
        echo "  target organization:    ${{ env.target-organization }}"
        echo "  target repository:      ${{ env.target-repository }}"
